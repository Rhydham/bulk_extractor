if WANT_BE_VIEWER
BE_VIEWER_DIR = java_gui
endif
if WANT_WIN_INSTALLER
SRC_WIN_DIR = src_win
endif

SUBDIRS = doc doc/user_manual src man python specfiles tests $(BE_VIEWER_DIR) $(SRC_WIN_DIR)

EXTRA_DIST = bootstrap.sh \
	ROADMAP.txt \
	README_DFRWS_2012_CHALLENGE.txt \
	m4/ax_pthread.m4

ACLOCAL_AMFLAGS="-I m4"

RELEASE_USER = simsong@
RELEASE_HOST = www.digitalcorpora.org
RELEASE_DIR  = digitalcorpora.org/

RELEASE_LOC  = $(RELEASE_DIR)/downloads/
VERSION_FN   = $(PACKAGE)_version.txt
RELEASE_PATH = $(RELEASE_LOC)/$(VERSION_FN)
RELEASE_SSH  = $(RELEASE_USER)$(RELEASE_HOST):$(RELEASE_LOC)
RELEASE	     = $(PACKAGE)-$(VERSION)

AM_CFLAGS   = -Wall
AM_CPPFLAGS = -Wall 
AM_CXXFLAGS = -Wall

release:
	make check_release_version
	make dist
	make distcheck
	make the_release

check_release_version:
	@echo Checking version on server for $(VERSION_FN)
	@echo
	echo
	/bin/rm -f $(VERSION_FN)
	wget -q http://$(RELEASE_HOST)/downloads/$(VERSION_FN)
	@echo Version `cat $(VERSION_FN)` is on the server.
	@sh -c "if [ `cat $(VERSION_FN)` = $(RELEASE).tar.gz ]; then echo ; echo ; echo $(RELEASE) is already on the server; exit 1; fi"
	/bin/rm -f $(VERSION_FN)

the_release: 
	gpg --detach-sign $(RELEASE).tar.gz
	scp $(RELEASE).tar.gz{,.sig} $(RELEASE_SSH)
	ssh $(RELEASE_HOST) 'cd $(RELEASE_LOC);/bin/rm $(PACKAGE).tar.gz;ln -s $(RELEASE).tar.gz $(PACKAGE).tar.gz'
	ssh $(RELEASE_HOST) 'echo $(RELEASE).tar.gz > $(RELEASE_PATH)'
	@echo Release $(RELEASE) uploaded to server

# config.h doesn't work right with .flex so run configure before make for win32 and win64
win32:
	rm -rf win32
	mkdir win32
	cp config.status temp_config.status
	make distclean;
	cd win32; mingw32-configure
	cd win32/src && make
	cp win32/src/bulk_extractor.exe win32/src/bulk_extractor32.exe
	mv temp_config.status config.status
	./config.status

win64:
	rm -rf win64
	mkdir win64
	cp config.status temp_config.status
	make distclean;
	cd win64; mingw64-configure
	cd win64/src && make
	cp win64/src/bulk_extractor.exe win64/src/bulk_extractor64.exe
	mv temp_config.status config.status
	./config.status

BEREL=bulk_extractor-windows_version.txt
BEZIP=bulk_extractor-windows-$(VERSION).zip

$(distdir).zip: 
	make windist

# windist makes bulk_extractor32.exe and bulk_extractor64.exe
# and puts them in a zip file
windist: win32 win64
	@echo checking to see if there are uncommitted sources
	(if (svn status | grep '^Q') ; then exit 1 ; fi)
	@echo nope
	rm -rf $(distdir).zip $(distdir) src/*.exe
	mkdir $(distdir)
	mkdir $(distdir)/python
	@echo
	cp win32/src/bulk_extractor32.exe $(distdir)
	cp win64/src/bulk_extractor64.exe $(distdir)
	@echo ====================================
	@echo 
	@echo making documentation
	make man/bulk_extractor.txt
	mv man/bulk_extractor.txt $(distdir)
	@echo ====================================
	@echo 
	@echo Creating ZIP archive
	@echo 
	zip -r9 $(distdir).zip $(distdir)
	@echo ====================================
	@echo 
	@echo Adding text files to $(distdir).zip 
	@echo 
	cp python/*.{py,txt}    $(distdir)/python
	cp ChangeLog		$(distdir)/ChangeLog.txt
	cp NEWS			$(distdir)/NEWS.txt
	cp COPYING		$(distdir)/COPYING.txt
	md5deep -r  $distdir > md5list.txt
	md5deep -rd $distdir > md5list.xml
	mv md5list.txt md5list.xml $(distdir)
	zip --to-crlf $(distdir).zip $(distdir)/*.txt $(distdir)/*.xml $(distdir)/python/*
	rm -rf $(distdir) $(WINDOWSDOCS) 
	@echo "***********************"
	@echo "*** WINDIST IS MADE ***"
	@echo "***********************"
	@echo ""
	ls -l $(distdir).*
	@echo ""
	@unzip -l $(distdir).zip

$(BEZIP): $(distdir).zip
	mv $(distdir).zip $(BEZIP)

winrelease: $(BEZIP)
	@echo checking to see if there are uncommitted sources
	(if (svn status | grep '^M') ; then exit 1 ; fi)
	@echo nope
	echo make $(distdir).zip
	scp $(BEZIP) $(RELEASE_SSH)
	ssh $(RELEASE_USER)$(RELEASE_HOST) 'echo $(BEZIP) > $(RELEASE_LOC)/$(BEREL)'

svnclean:
	echo these files will be deleted: 
	svn status | grep '^[?]' | awk '{print $2;}'
	echo 
	echo hit return to continue
	read
	/bin/rm -rf `svn status | grep '^[?]' | awk '{print $2;}'`

CLEANFILES = man/bulk_extractor.txt

#clean-local:
#	rm -rf win32
#	rm -rf win64

SUFFIXES = .txt .1
.1.txt:
	/usr/bin/tbl $< | /usr/bin/groff -S -Wall -mtty-char -mandoc -Tascii | /usr/bin/col -bx > $@

.PHONY: windist win32 win64 doxygen

